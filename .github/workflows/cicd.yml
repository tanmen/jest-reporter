name: CI/CD
on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:
  tests:
    strategy:
      matrix:
        version: [18.x, 20.x, 22.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - name: Install dependencies
        run: yarn install --immutable
      - run: yarn build
      - run: yarn test --json --outputFile=result.json --testLocationInResults
      - uses: ./
        if: always()
        with:
          action-name: jest report (${{ matrix.version }})
          github-token: ${{ secrets.GITHUB_TOKEN }}
  release:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [ tests ]
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
